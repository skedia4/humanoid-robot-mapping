<?xml version="1.0"?>
<launch>
    
    <include file="$(find realsense2_camera)/launch/rs_camera.launch">
        <!-- Can change the parametrs to get a more sparse point cloud data. Improves computation speed. Refer on intel realsense ros wrapper offical document -->
        <arg name="color_width" value="1280" />
        <arg name="color_height" value="720" />
        <arg name="filters" value="pointcloud" />
    </include>

    <param name="scan_period" value="0.1" />
    <param name="vertical_angle" type="double" value="2.0" />
    <param name="max_dis" type="double" value="9.0" />
    <param name="map_resolution" type="double" value="0.05" />
    <param name="min_dis" type="double" value="0.2" />
    

    <node pkg="ssl_slam" type="ssl_slam_laser_processing_node" name="ssl_slam_laser_processing_node" output="log"/>
    <node pkg="ssl_slam" type="ssl_slam_odom_estimation_node" name="ssl_slam_odom_estimation_node" output="log"/>
    <!-- Can comment this if only odometry is required to save memory and compuation -->
    <node pkg="ssl_slam" type="ssl_slam_laser_mapping_node" name="ssl_slam_laser_mapping_node" output="log"/>


     <!-- Launch Pythonfiles -->
    <node name="Py_map_node" pkg="ssl_slam" type="main_mapping.py" output="screen" />
    <node name="Py_animation" pkg="ssl_slam" type="Animatation_subscriber.py" output="screen" />


    <!-- Can Set to false if no rviz vizuation of point cloud or poses is required -->
    <arg name="rviz" default="false" />
    <group if="$(arg rviz)">
        <node launch-prefix="nice" pkg="rviz" type="rviz" name="rviz" args="-d $(find ssl_slam)/rviz/ssl_slam_mapping.rviz" />
    </group>

    <node pkg="hector_trajectory_server" type="hector_trajectory_server" name="trajectory_server_ssl_slam" ns="ssl_slam" >
        <param name="/target_frame_name" value="map" />
        <param name="/source_frame_name" value="base_link" />
        <param name="/trajectory_update_rate" value="10.0" />
        <param name="/trajectory_publish_rate" value="10.0" />
    </node>


</launch>
